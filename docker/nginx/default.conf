# Configuración de Nginx para Odoo sin SSL (HTTP)
# Se usará hasta que se configure un dominio y SSL

# Upstream para Odoo
upstream odoo {
    server odoo:8069;
    keepalive 32;
}

upstream odoochat {
    server odoo:8072;
    keepalive 32;
}

# Rate limiting maps
map $http_x_forwarded_for $limit {
    default $binary_remote_addr;
    ~^(?P<ip>\d+\.\d+\.\d+\.\d+) $ip;
}

# Servidor HTTP principal
server {
    listen 80;
    server_name _;

    # Logging
    access_log /var/log/nginx/odoo.access.log detailed;
    error_log /var/log/nginx/odoo.error.log;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Rate limiting
    limit_req zone=api burst=20 nodelay;

    # Proxy settings comunes
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $http_host;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Buffering
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Compression
    gzip_proxied any;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Handle longpolling requests
    location /longpolling {
        proxy_pass http://odoochat;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # No buffering for real-time communication
        proxy_buffering off;
        proxy_cache off;
        
        # Extended timeouts for long polling
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    # Static files with caching
    location ~* /web/static/ {
        proxy_cache odoo_cache;
        proxy_cache_valid 200 302 60m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_pragma $http_authorization;
        
        # Cache headers
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        proxy_pass http://odoo;
    }

    # CSS and JS files
    location ~* \.(css|js)$ {
        proxy_cache odoo_cache;
        proxy_cache_valid 200 302 24h;
        proxy_cache_valid 404 1m;
        
        expires 1y;
        add_header Cache-Control "public";
        add_header X-Cache-Status $upstream_cache_status;
        
        proxy_pass http://odoo;
    }

    # Image files
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        proxy_cache odoo_cache;
        proxy_cache_valid 200 302 30d;
        proxy_cache_valid 404 1m;
        
        expires 1y;
        add_header Cache-Control "public";
        add_header X-Cache-Status $upstream_cache_status;
        
        proxy_pass http://odoo;
    }

    # Font files
    location ~* \.(woff|woff2|ttf|eot)$ {
        proxy_cache odoo_cache;
        proxy_cache_valid 200 302 1y;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        # CORS for fonts
        add_header Access-Control-Allow-Origin *;
        
        proxy_pass http://odoo;
    }

    # Admin and sensitive paths with additional rate limiting
    location ~ ^/(web/database|web/session) {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://odoo;
    }

    # API endpoints
    location ~ ^/api/ {
        limit_req zone=api burst=50 nodelay;
        proxy_pass http://odoo;
    }

    # Main application
    location / {
        proxy_pass http://odoo;
        proxy_redirect off;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common attack patterns
    location ~* (\.php|\.asp|\.aspx|\.jsp)$ {
        return 444;
    }
}

# Server status page (accessible only from localhost)
server {
    listen 127.0.0.1:8080;
    server_name localhost;

    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
